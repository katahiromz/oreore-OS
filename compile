#!
# ※注意：このスクリプトを実行するとヘッダファイル"stdio.rh"が更新されます
# "oreore-os.r"をコンパイルしてディレクトリ"bin"にuefiアプリケーションファイルをコピーします
# 同時にoreore-OSアプリケーション用ヘッダファイル"stdio.rh"も更新します

# オプション
# -app:特定のアプリケーションを作成する
# -noapp:アプリケーションをコンパイルしない

option="-normal"
if test $# -gt 0 
then
 option=$1
fi
echo "option=" $option 


# 特定のプリケーションをコンパイルする場合
# 2番目のパラメータはアプリケーション(拡張子を除いた名前)
# 3番目のパラメータは開始アドレス(省略可)
if test $option = "-app"
then

  base=0xa8000
  if test $# -gt 2
  then
     base=$3
  fi

echo compile $2.r
echo base addr=$base
 
./orc stdio.rh src/$2.r
java -jar asm_x64.jar -p$base -efi asm.s bin/$2.EFI


# 作業ファイルを消去
rm __str
rm __var
rm __tmp1
rm __tmp2
exit 0

fi


#ブートローダのコンパイル
echo compile boot-loader
./orc src/boot-loader.r
java -jar asm_x64.jar -efi -header asm.s bin/efi/boot/bootx64.EFI | sed -f boot-loader.sed > boot-loader.rh


#OS本体のコンパイル
echo compile oreore-os.r
./orc boot-loader.rh src/oreore-os.r
echo "// header file for oreore-OS application" > stdio.rh
java -jar asm_x64.jar -p0x4000 -efi -header asm.s bin/oreore-os.EFI |sed -f stdio.sed >> stdio.rh
cat stdio.base >> stdio.rh

#objdump -fsxdt bin/oreore-os.EFI>oreore-os.dump
#cp asm.s oreore-os.s


# アプリケーションをコンパイルしない場合はここで終了
if test $option = "-noapp"
then
rm __str
rm __var
rm __tmp1
rm __tmp2
exit 0
fi



cp stdio.rh bin


# oreore-OSの各アプリケーションのコンパイル
# ※コンパイルのアドレスはページ(4KB)単位で指定すること



# startx
echo compile startx.r
./orc stdio.rh src/startx.r
#cp asm.s startx.s
java -jar asm_x64.jar -p0x26000 -efi -header asm.s bin/startx.EFI |sed -f startx.sed > startx.rh
#objdump -fsxdt bin/startx.EFI>startx.dump
if test $option = "-startx"
then
rm __str
rm __var
rm __tmp1
rm __tmp2
exit 0
fi


# basic
echo compile basic.r
./orc stdio.rh src/basic.r
java -jar asm_x64.jar -p0x108000 -efi asm.s bin/basic.EFI
#objdump -fsxdt bin/basic.EFI>basic.dump
if test $option = "-basic"
then
rm __str
rm __var
rm __tmp1
rm __tmp2
exit 0
fi


# エディタ
echo compile edit.r
./orc stdio.rh src/edit.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/edit.EFI

# コンパイラ
echo compile orc.r
./orc stdio.rh src/orc.r src/codegen.r
#cp asm.s orc.s
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/orc.EFI

# アセンブラ
echo compile asm.r
./orc stdio.rh src/asm.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/asm.EFI
#cp asm.s asm_x64.s


# ls
echo compile ls.r
./orc stdio.rh src/ls.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/ls.EFI

# ps
echo compile ps.r
./orc stdio.rh src/ps.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/ps.EFI

# cat
echo compile cat.r
./orc stdio.rh src/cat.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/cat.EFI

# cp
echo compile cp.r
./orc stdio.rh src/cp.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/cp.EFI

# mv
echo compile mv.r
./orc stdio.rh src/mv.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/mv.EFI

# rm
echo compile rm.r
./orc stdio.rh src/rm.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/rm.EFI

# cls
echo compile cls.r
./orc stdio.rh src/cls.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/cls.EFI

# shutdown
echo compile shutdown.r
./orc stdio.rh src/shutdown.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/shutdown.EFI

# reboot
echo compile reboot.r
./orc stdio.rh src/reboot.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/reboot.EFI

# telnet
echo compile telnet.r
./orc stdio.rh src/telnet.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/telnet.EFI

# lsusb
echo compile lsusb.r
./orc stdio.rh src/lsusb.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/lsusb.EFI

# mouse_test
echo compile mouse_test.r
./orc stdio.rh src/mouse_test.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/mouse_test.EFI

# mplayer
echo compile mplayer.r
./orc stdio.rh src/mplayer.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/mplayer.EFI


# notepad
echo compile notepad.r
./orc stdio.rh startx.rh src/notepad.r
java -jar asm_x64.jar -p0xa8000 -efi asm.s bin/notepad.EFI

# calc
echo compile calc.r
./orc stdio.rh startx.rh src/calc.r
java -jar asm_x64.jar -p0xf8000 -efi asm.s bin/calc.EFI

# paint
echo compile paint.r
./orc stdio.rh startx.rh src/paint.r
#cp asm.s paint.s
java -jar asm_x64.jar -p0xc8000 -efi asm.s bin/paint.EFI

# explore
echo compile explore.r
./orc stdio.rh startx.rh src/explore.r
java -jar asm_x64.jar -p0xd8000 -efi asm.s bin/explore.EFI


# 作業ファイルを消去
rm __str
rm __var
rm __tmp1
rm __tmp2
